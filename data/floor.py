# -*- coding: utf-8 -*-
# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–ª–æ—Ä–∞

# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
import aiohttp
from config import config
from data.currency import get_matic_rate

headers = {"X-API-KEY": config.api.raribe_key}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç API Rarible
async def fetch_data(session, url):
    async with session.get(url) as resp:
        if resp.status != 200:
            print(f"Error: {resp.status}")
            data = await resp.json(content_type=None)
            print(f"Error: {data}")
            return None
        return await resp.json(content_type=None)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–ª–æ—Ä–∞ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
async def get():
    async with aiohttp.ClientSession() as session:
        async with session.get(
            config.api.rarible + "floorPrice/?currency=MATIC", headers=headers
        ) as resp:
            data = await resp.json(content_type=None)
            if resp.status != 200:
                print(f"Error: {resp.status}")
                print(f"Error: {data}")
                return

    previous = data["historicalValues"][-1]
    change_percent = round((abs(data["currentValue"] - previous) / previous) * 100.0, 2)

    matic_rub, matic_usd = map(lambda x: round(x, 2), await get_matic_rate())

    currentRub = round(data["currentValue"] * matic_rub)

    if data["currentValue"] > previous:
        bot_message = f"üìà –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC (‚âà{currentRub}‚ÇΩ) [+{change_percent}%]"
    elif data["currentValue"] == previous:
        bot_message = (
            f"üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC [‚âà{currentRub}‚ÇΩ]"
        )
    else:
        bot_message = f"üìâ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC (‚âà{currentRub}‚ÇΩ) [-{change_percent}%]"

    bot_message += f"\n\n–í—á–µ—Ä–∞: {data['historicalValues'][-1]} MATIC"
    bot_message += f"\n–ü–æ–∑–∞–≤—á–µ—Ä–∞: {data['historicalValues'][-2]} MATIC"

    bot_message += f"\n\n1 MATIC ‚âà {matic_rub}‚ÇΩ | ${matic_usd}"

    return bot_message


async def get_stats():
    url = config.api.rarible + "stats/?currency=MATIC"
    async with aiohttp.ClientSession() as session:
        async with session.get(url, headers=headers) as resp:
            data = await resp.json(content_type=None)
            if resp.status != 200:
                print(f"Error: {resp.status}")
                print(f"Error: {data}")
                return
    return data


# –û—Ç–¥–∞—Ç—å –≥–æ–ª—ã–µ –¥–∞–Ω–Ω—ã–µ
async def get_raw():
    async with aiohttp.ClientSession() as session:
        async with session.get(
            config.api.rarible + "floorPrice/?currency=MATIC", headers=headers
        ) as resp:
            data = await resp.json(content_type=None)
            if resp.status != 200:
                print(f"Error: {resp.status}")
                print(f"Error: {data}")
                return
    return data
