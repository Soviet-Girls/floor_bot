# -*- coding: utf-8 -*-
# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–ª–æ—Ä–∞

# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
import aiohttp
from config import config


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç API Rarible
async def fetch_data(session, url):
    async with session.get(url) as resp:
        if resp.status != 200:
            print(f"Error: {resp.status}")
            data = await resp.json(content_type=None)
            print(f"Error: {data}")
            return None
        return await resp.json(content_type=None)
    

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–ª–æ—Ä–µ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
async def get():
    async with aiohttp.ClientSession() as session:
        data = await fetch_data(session, config.api.rarible)
        if data is None:
            return

        previous = data["historicalValues"][-2]
        change_percent = round((abs(data["currentValue"] - previous) / previous) * 100.0, 2)

        if data["currentValue"] > previous:
            bot_message = f"üìà –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC (+{change_percent}%)"
        elif data["currentValue"] == previous:
            bot_message = f"üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC"
        else:
            bot_message = f"üìâ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC (-{change_percent}%)"

        bot_message += f"\n\n–í—á–µ—Ä–∞: {data['historicalValues'][-2]} MATIC"
        bot_message += f"\n–ü–æ–∑–∞–≤—á–µ—Ä–∞: {data['historicalValues'][-3]} MATIC"
        return bot_message


async def get_stats():
    url = config.api.rarible
    async with aiohttp.ClientSession() as session:
        data = await fetch_data(session, url)
        if data is None:
            return
    return data


# –û—Ç–¥–∞—Ç—å —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
async def get_raw():
    async with aiohttp.ClientSession() as session:
        data = await fetch_data(session, config.api.rarible)
        if data is None:
            return
    return data


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–ª–æ—Ä–∞ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
async def get():
    async with aiohttp.ClientSession() as session:
        async with session.get(config.api.rarible) as resp:
            data = await resp.json(content_type=None)
            if resp.status != 200:
                print(f"Error: {resp.status}")
                print(f"Error: {data}")
                return

    previous = data["historicalValues"][-2]
    change_percent = round((abs(data["currentValue"] - previous) / previous) * 100.0, 2)

    if data["currentValue"] > previous:
        bot_message = (
            f"üìà –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC (+{change_percent}%)"
        )
    elif data["currentValue"] == previous:
        bot_message = f"üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC"
    else:
        bot_message = (
            f"üìâ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–ª–æ—Ä: {data['currentValue']} MATIC (-{change_percent}%)"
        )

    bot_message += f"\n\n–í—á–µ—Ä–∞: {data['historicalValues'][-2]} MATIC"
    bot_message += f"\n–ü–æ–∑–∞–≤—á–µ—Ä–∞: {data['historicalValues'][-3]} MATIC"
    return bot_message

async def get_stats():
    url = config.api.rarible
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            data = await resp.json(content_type=None)
            if resp.status != 200:
                print(f"Error: {resp.status}")
                print(f"Error: {data}")
                return
    return data


# –û—Ç–¥–∞—Ç—å –≥–æ–ª—ã–µ –¥–∞–Ω–Ω—ã–µ
async def get_raw():
    async with aiohttp.ClientSession() as session:
        async with session.get(config.api.rarible) as resp:
            data = await resp.json(content_type=None)
            if resp.status != 200:
                print(f"Error: {resp.status}")
                print(f"Error: {data}")
                return
    return data
